"""Add blog system tables

Revision ID: 10641ba5505d
Revises: 756a96d20f06
Create Date: 2025-08-01 02:33:26.593475

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10641ba5505d'
down_revision = '756a96d20f06'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('design_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('allow_comments', sa.Boolean(), nullable=False),
    sa.Column('featured_image_url', sa.String(length=500), nullable=True),
    sa.Column('blog_metadata', sa.JSON(), nullable=True),
    sa.Column('meta_description', sa.String(length=500), nullable=True),
    sa.Column('social_image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['design_id'], ['designs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('design_id')
    )
    op.create_index(op.f('ix_blog_posts_category'), 'blog_posts', ['category'], unique=False)
    op.create_index(op.f('ix_blog_posts_id'), 'blog_posts', ['id'], unique=False)
    op.create_index(op.f('ix_blog_posts_is_published'), 'blog_posts', ['is_published'], unique=False)
    op.create_index(op.f('ix_blog_posts_title'), 'blog_posts', ['title'], unique=False)
    op.create_table('blog_post_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blog_post_likes', 'blog_post_likes', ['blog_post_id'], unique=False)
    op.create_index('idx_unique_blog_like', 'blog_post_likes', ['blog_post_id', 'user_id'], unique=True)
    op.create_index('idx_user_likes', 'blog_post_likes', ['user_id'], unique=False)
    op.create_index(op.f('ix_blog_post_likes_id'), 'blog_post_likes', ['id'], unique=False)
    op.create_table('blog_post_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('viewed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blog_post_views', 'blog_post_views', ['blog_post_id'], unique=False)
    op.create_index('idx_user_views', 'blog_post_views', ['user_id'], unique=False)
    op.create_index('idx_view_time', 'blog_post_views', ['viewed_at'], unique=False)
    op.create_index(op.f('ix_blog_post_views_id'), 'blog_post_views', ['id'], unique=False)
    op.drop_index(op.f('idx_design_analytics_created'), table_name='design_analytics')
    op.drop_index(op.f('idx_design_analytics_design_event'), table_name='design_analytics')
    op.drop_table('design_analytics')
    op.drop_index(op.f('idx_design_likes_design'), table_name='design_likes')
    op.drop_table('design_likes')
    op.alter_column('design_hashtags', 'hashtag',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.create_index('idx_design_hashtag', 'design_hashtags', ['design_id', 'hashtag'], unique=False)
    op.create_index(op.f('ix_design_hashtags_hashtag'), 'design_hashtags', ['hashtag'], unique=False)
    op.add_column('designs', sa.Column('width', sa.Integer(), nullable=True))
    op.add_column('designs', sa.Column('length', sa.Integer(), nullable=True))
    op.add_column('designs', sa.Column('height', sa.Integer(), nullable=True))
    op.drop_index(op.f('idx_designs_public_likes'), table_name='designs')
    op.drop_index(op.f('idx_designs_public_published'), table_name='designs')
    op.drop_index(op.f('idx_designs_public_views'), table_name='designs')
    op.drop_index(op.f('idx_designs_style_type_public'), table_name='designs')
    op.drop_constraint(op.f('fk_designs_published_by_user'), 'designs', type_='foreignkey')
    op.drop_column('designs', 'like_count')
    op.drop_column('designs', 'view_count')
    op.drop_column('designs', 'published_by_user_id')
    op.drop_column('designs', 'is_public')
    op.drop_column('designs', 'published_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('designs', sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('designs', sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('designs', sa.Column('published_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('designs', sa.Column('view_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.add_column('designs', sa.Column('like_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('fk_designs_published_by_user'), 'designs', 'users', ['published_by_user_id'], ['id'], ondelete='SET NULL')
    op.create_index(op.f('idx_designs_style_type_public'), 'designs', ['design_style', 'room_type', 'is_public'], unique=False)
    op.create_index(op.f('idx_designs_public_views'), 'designs', ['is_public', 'view_count'], unique=False)
    op.create_index(op.f('idx_designs_public_published'), 'designs', ['is_public', 'published_at'], unique=False)
    op.create_index(op.f('idx_designs_public_likes'), 'designs', ['is_public', 'like_count'], unique=False)
    op.drop_column('designs', 'height')
    op.drop_column('designs', 'length')
    op.drop_column('designs', 'width')
    op.drop_index(op.f('ix_design_hashtags_hashtag'), table_name='design_hashtags')
    op.drop_index('idx_design_hashtag', table_name='design_hashtags')
    op.alter_column('design_hashtags', 'hashtag',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.create_table('design_likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('design_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['design_id'], ['designs.id'], name=op.f('design_likes_design_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('design_likes_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('design_likes_pkey')),
    sa.UniqueConstraint('design_id', 'user_id', name=op.f('uq_design_user_like'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('idx_design_likes_design'), 'design_likes', ['design_id'], unique=False)
    op.create_table('design_analytics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('design_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('extra_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['design_id'], ['designs.id'], name=op.f('design_analytics_design_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('design_analytics_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('design_analytics_pkey'))
    )
    op.create_index(op.f('idx_design_analytics_design_event'), 'design_analytics', ['design_id', 'event_type'], unique=False)
    op.create_index(op.f('idx_design_analytics_created'), 'design_analytics', ['created_at'], unique=False)
    op.drop_index(op.f('ix_blog_post_views_id'), table_name='blog_post_views')
    op.drop_index('idx_view_time', table_name='blog_post_views')
    op.drop_index('idx_user_views', table_name='blog_post_views')
    op.drop_index('idx_blog_post_views', table_name='blog_post_views')
    op.drop_table('blog_post_views')
    op.drop_index(op.f('ix_blog_post_likes_id'), table_name='blog_post_likes')
    op.drop_index('idx_user_likes', table_name='blog_post_likes')
    op.drop_index('idx_unique_blog_like', table_name='blog_post_likes')
    op.drop_index('idx_blog_post_likes', table_name='blog_post_likes')
    op.drop_table('blog_post_likes')
    op.drop_index(op.f('ix_blog_posts_title'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_is_published'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_id'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_category'), table_name='blog_posts')
    op.drop_table('blog_posts')
    # ### end Alembic commands ###
