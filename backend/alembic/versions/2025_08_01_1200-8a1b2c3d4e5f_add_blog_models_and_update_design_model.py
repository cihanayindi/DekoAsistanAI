"""Add blog models and update design model

Revision ID: 8a1b2c3d4e5f
Revises: 756a96d20f06
Create Date: 2025-08-01 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8a1b2c3d4e5f'
down_revision = '756a96d20f06'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to designs table
    op.add_column('designs', sa.Column('width', sa.Float(), nullable=True))
    op.add_column('designs', sa.Column('length', sa.Float(), nullable=True))
    op.add_column('designs', sa.Column('height', sa.Float(), nullable=True))
    op.add_column('designs', sa.Column('design_title', sa.String(length=255), nullable=True))
    op.add_column('designs', sa.Column('design_description', sa.Text(), nullable=True))
    
    # Update DesignHashtag to store hashtag directly
    op.add_column('design_hashtags', sa.Column('hashtag', sa.String(length=255), nullable=True))
    
    # Create blog_posts table
    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('design_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('allow_comments', sa.Boolean(), nullable=False),
    sa.Column('featured_image_url', sa.String(length=500), nullable=True),
    sa.Column('blog_metadata', sa.JSON(), nullable=True),
    sa.Column('meta_description', sa.String(length=500), nullable=True),
    sa.Column('social_image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['design_id'], ['designs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('design_id')
    )
    op.create_index(op.f('ix_blog_posts_category'), 'blog_posts', ['category'], unique=False)
    op.create_index(op.f('ix_blog_posts_id'), 'blog_posts', ['id'], unique=False)
    op.create_index(op.f('ix_blog_posts_is_published'), 'blog_posts', ['is_published'], unique=False)
    op.create_index(op.f('ix_blog_posts_title'), 'blog_posts', ['title'], unique=False)
    
    # Create blog_post_likes table
    op.create_table('blog_post_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blog_post_likes', 'blog_post_likes', ['blog_post_id'], unique=False)
    op.create_index('idx_unique_blog_like', 'blog_post_likes', ['blog_post_id', 'user_id'], unique=True)
    op.create_index('idx_user_likes', 'blog_post_likes', ['user_id'], unique=False)
    op.create_index(op.f('ix_blog_post_likes_id'), 'blog_post_likes', ['id'], unique=False)
    
    # Create blog_post_views table
    op.create_table('blog_post_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blog_post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('viewed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['blog_post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blog_post_views', 'blog_post_views', ['blog_post_id'], unique=False)
    op.create_index('idx_user_views', 'blog_post_views', ['user_id'], unique=False)
    op.create_index('idx_view_time', 'blog_post_views', ['viewed_at'], unique=False)
    op.create_index(op.f('ix_blog_post_views_id'), 'blog_post_views', ['id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop blog tables
    op.drop_index(op.f('ix_blog_post_views_id'), table_name='blog_post_views')
    op.drop_index('idx_view_time', table_name='blog_post_views')
    op.drop_index('idx_user_views', table_name='blog_post_views')
    op.drop_index('idx_blog_post_views', table_name='blog_post_views')
    op.drop_table('blog_post_views')
    
    op.drop_index(op.f('ix_blog_post_likes_id'), table_name='blog_post_likes')
    op.drop_index('idx_user_likes', table_name='blog_post_likes')
    op.drop_index('idx_unique_blog_like', table_name='blog_post_likes')
    op.drop_index('idx_blog_post_likes', table_name='blog_post_likes')
    op.drop_table('blog_post_likes')
    
    op.drop_index(op.f('ix_blog_posts_title'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_is_published'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_id'), table_name='blog_posts')
    op.drop_index(op.f('ix_blog_posts_category'), table_name='blog_posts')
    op.drop_table('blog_posts')
    
    # Remove columns from designs table
    op.drop_column('designs', 'design_description')
    op.drop_column('designs', 'design_title')
    op.drop_column('designs', 'height')
    op.drop_column('designs', 'length')
    op.drop_column('designs', 'width')
    
    # Remove hashtag column from design_hashtags
    op.drop_column('design_hashtags', 'hashtag')
    
    # ### end Alembic commands ###
